{
  "name": "Mithdropdown",
  "tagline": "A simple drop down component for mithril js framework",
  "body": "# mith DropDown\r\nA basic reusable drop down component for mithril js framework.\r\nThis component is intended to create reusable drop down lists as a component in [mithril js.](http://mithril.js.org/)\r\nA list as an array is passed in to the object as it is beig instantiated and the drop down is created with the array.\r\n\r\n```javascript\r\nvar list=['Banana','Apple','Orange','Kiwi'];\r\nvar myList=new MythDropDown(list);\r\n```\r\nThen the component can be used in any mithril view:\r\n```javascript\r\nvar main={\r\n\tview:function(){\r\n    \treturn m.component(myList);\r\n    }\r\n}\r\n```\r\nAnd the created view can be placed in the DOM:\r\n\r\n```javascript\r\nvar main={\r\n\tview:function(){\r\n    \treturn m.component(myList);\r\n    }\r\n}\r\n```\r\nFor easier usage the component has the following functions which can be accessed directly:\r\n* update() //updated the drop down with a new list\r\n* sort() //sort the drop down\r\n* delete() //remove the selected item\r\n* getSelected() // returns the selected items name and index.\r\n\r\nAny of the above functions can be accessed in the examples below:\r\n```javascript\r\n var L1=['Yellow','Black','Orange','Brown','Red'];\r\n  \t myList.update(L1);\r\n     myList.sort();\r\n     myList.delete();\r\n     console.log(myList.selected.name);\r\n     console.log(myList.selected.index);\r\n```\r\n\r\n## Links\r\n\r\n * [markdown-it](https://github.com/markdown-it/markdown-it) for Markdown parsing\r\n * [CodeMirror](http://codemirror.net/) for the awesome syntax-highlighted editor\r\n * [highlight.js](http://softwaremaniacs.org/soft/highlight/en/) for syntax highlighting in output code blocks\r\n * [js-deflate](https://github.com/dankogai/js-deflate) for gzipping of data to make it fit in URLs\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}